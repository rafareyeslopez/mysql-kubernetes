apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-example-initdb-config
  namespace: mynamespace
data:
  initdb.sql: |
    ALTER USER 'example'@'%' IDENTIFIED WITH mysql_native_password BY 'mypassword';
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  ## name of ConfigMap. This will be referred from volume definition
  name: mysql-example-config
  namespace: mynamespace
  labels:
    app: mysql-example
data:
  ## default_auth is the name of config. This will be referred from volume mount definition
  default_auth: |
    [mysqld]
    default_authentication_plugin= mysql_native_password
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-example-credentials
  namespace: mynamespace
type: Opaque
data:
  password: bXlwYXNzd29yZA==
  root_password: bXlwYXNzd29yZA==
  user: ZXhhbXBsZQ==
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-example
  namespace: mynamespace
spec:
  ports:
  - port: 3306
  selector:
    app: mysql-example
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-example-volumeclaim
  namespace: mynamespace
  labels:
    app: mysql-example-volumeclaim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-example
  namespace: mynamespace
  labels:
    app: mysql-example
spec:
  replicas: 1
  serviceName: mysql-example
  selector:
    matchLabels:
      app: mysql-example
  template:
    metadata:
      labels:
        app: mysql-example
    spec:
      containers:
        - image: mysql
          name: mysql-example          
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: mysql-example-credentials
                    key: root_password
            - name: MYSQL_USER
              valueFrom:
                  secretKeyRef:
                    name: mysql-example-credentials
                    key: user
          # ... and a password of the value of MYSQL_PASSWORD ...
            - name: MYSQL_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: mysql-example-credentials
                    key: password
          # ... and an initial database
          # with the value of MYSQL_DATABASE (while granting MYSQL_USER superuser access.)
            - name: MYSQL_DATABASE
              value: example_db        
          # Using config map instead
          # args: ["--default-authentication-plugin=mysql_native_password"]
          ports:
            - containerPort: 3306
              name: mysql-example
          resources:
            requests:
                memory: "512Mi"
                cpu: "0.05"
            limits:
                memory: "1Gi"
                cpu: "0.1"         
              
          volumeMounts:
            - name: mysql-example-config-volume ## specify volume name
              mountPath: /etc/mysql/conf.d/default_auth.cnf ## path to mount file
              subPath: default_auth ## name of config            
            - name: mysql-example-initdb
              mountPath: /docker-entrypoint-initdb.d  
            - name: mysql-example-persistent-storage
              mountPath: /var/lib/mysql
              subPath: mysql
      volumes:
        - name: mysql-example-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-example-volumeclaim
        - name: mysql-example-config-volume ## volume name
          configMap:
            name: mysql-example-config ## name of ConfigMap
        - name: mysql-example-initdb
          configMap:
            name: mysql-example-initdb-config
